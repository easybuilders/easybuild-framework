language: python
python: 2.7
dist: xenial
env:
  matrix:
    - LMOD_VERSION=7.8.22
    - LMOD_VERSION=7.8.22 TEST_EASYBUILD_MODULE_SYNTAX=Tcl
    - ENV_MOD_VERSION=3.2.10 TEST_EASYBUILD_MODULES_TOOL=EnvironmentModulesC TEST_EASYBUILD_MODULE_SYNTAX=Tcl
    - ENV_MOD_TCL_VERSION=1.147 TEST_EASYBUILD_MODULES_TOOL=EnvironmentModulesTcl TEST_EASYBUILD_MODULE_SYNTAX=Tcl
    - ENV_MOD_VERSION=4.1.4 TEST_EASYBUILD_MODULE_SYNTAX=Tcl TEST_EASYBUILD_MODULES_TOOL=EnvironmentModules  # Tmod 4.1.4 is used in RHEL8
cache:
  pip: true
matrix:
  # mark build as finished as soon as job has failed
  fast_finish: true
  include:
    # also test default configuration with Python 2.6
    - python: 2.6
      env: LMOD_VERSION=7.8.22 TEST_EASYBUILD_SILENCE_DEPRECATION_WARNINGS=Python26
      dist: trusty
    # single configuration to test with Lmod 6 and Python 2.7
    - python: 2.7
      env: LMOD_VERSION=6.5.1 TEST_EASYBUILD_SILENCE_DEPRECATION_WARNINGS=Lmod6
    # also test with Python 3.6
    - python: 3.6
      env: LMOD_VERSION=7.8.22
addons:
  apt:
    packages:
      # for environment modules/Lmod
      - tcl8.5
      # for GitPython, python-hglib
      - git
      - mercurial
      # for GC3Pie (optional dep for EasyBuild)
      - time
before_install:
    - pip --version
    - pip install --upgrade pip
    - pip --version
    - pip install -r requirements.txt
    # git config is required to make actual git commits (cfr. tests for GitRepository)
    - git config --global user.name "Travis CI"
    - git config --global user.email "travis@travis-ci.org"
install:
    # install environment modules or Lmod
    - export INSTALL_DEP=$TRAVIS_BUILD_DIR/easybuild/scripts/install_eb_dep.sh
    - cd $HOME  # avoid downloading into easybuild-framework dir
    - if [ ! -z $ENV_MOD_VERSION ]; then source $INSTALL_DEP modules-${ENV_MOD_VERSION} $HOME; fi
    - if [ ! -z $LMOD_VERSION ]; then source $INSTALL_DEP lua-5.1.4.8 $HOME; fi
    - if [ ! -z $LMOD_VERSION ]; then source $INSTALL_DEP Lmod-${LMOD_VERSION} $HOME; fi
    - if [ ! -z $ENV_MOD_TCL_VERSION ]; then source $INSTALL_DEP modules-tcl-${ENV_MOD_TCL_VERSION} $HOME; fi
script:
    # make sure 'ml' alias is defined, otherwise sourcing the init script fails (silently) for Lmod (< 5.9.3)
    - if [ ! -z $MOD_INIT ] && [ ! -z $LMOD_VERSION ]; then alias ml=foobar; fi
    # set up environment for modules tool (if $MOD_INIT is defined)
    - if [ ! -z $MOD_INIT ]; then source $MOD_INIT; type module; fi
    # install GitHub token
    - if [ ! -z $GITHUB_TOKEN ]; then
        if [ "x$TRAVIS_PYTHON_VERSION" == 'x2.6' ];
            then SET_KEYRING="keyring.set_keyring(keyring.backends.file.PlaintextKeyring())";
            else SET_KEYRING="import keyrings; keyring.set_keyring(keyrings.alt.file.PlaintextKeyring())";
        fi;
        python -c "import keyring; $SET_KEYRING; keyring.set_password('github_token', 'easybuild_test', '$GITHUB_TOKEN')";
      fi
    - if [ ! -z $TEST_EASYBUILD_MODULES_TOOL ]; then export EASYBUILD_MODULES_TOOL=$TEST_EASYBUILD_MODULES_TOOL; fi
    - if [ ! -z $TEST_EASYBUILD_MODULE_SYNTAX ]; then export EASYBUILD_MODULE_SYNTAX=$TEST_EASYBUILD_MODULE_SYNTAX; fi
    # create 'source distribution' tarball, like we do when publishing a release to PyPI
    - cd $TRAVIS_BUILD_DIR; python setup.py sdist
    - ls -l $TRAVIS_BUILD_DIR/dist/
    # set up environment for EasyBuild framework tests
    - export PATH=/tmp/$TRAVIS_JOB_ID/bin:$PATH
    - export PYTHONPATH=/tmp/$TRAVIS_JOB_ID/lib/python$TRAVIS_PYTHON_VERSION/site-packages
    # install easybuild-framework to unique temporary location using prepared sdist tarball
    - mkdir -p $PYTHONPATH; easy_install --prefix /tmp/$TRAVIS_JOB_ID $TRAVIS_BUILD_DIR/dist/easybuild-framework*tar.gz
    # make sure there are no (top-level) "import setuptools" or "import pkg_resources" statements,
    # since EasyBuild should not have a runtime requirement on setuptools
    - SETUPTOOLS_IMPORTS=$(egrep -RI '^(from|import)[ ]*pkg_resources|^(from|import)[ ]*setuptools' easybuild/ || true)
    - test "x$SETUPTOOLS_IMPORTS" = "x" || (echo "Found setuptools and/or pkg_resources imports in easybuild/:\n${SETUPTOOLS_IMPORTS}" && exit 1)
    # move outside of checkout of easybuild-framework repository,
    # to run tests on an *installed* version of the EasyBuild framework;
    # this is done to catch possible packaging issues
    - cd $HOME
    # eb --version with verbose output from 'eb' command (to show selection of 'python' command to use)
    - EB_VERBOSE=1 eb --version
    # check GitHub configuration
    - eb --check-github --github-user=easybuild_test
    # create file owned by root but writable by anyone (used by test_copy_file)
    - sudo touch /tmp/file_to_overwrite_for_easybuild_test_copy_file.txt
    - sudo chmod o+w /tmp/file_to_overwrite_for_easybuild_test_copy_file.txt
    # run test suite
    - python -O -m test.framework.suite 2>&1 | tee test_framework_suite.log
    # try and make sure output of running tests is clean (no printed messages/warnings)
    - IGNORE_PATTERNS="no GitHub token available|skipping SvnRepository test|lib/python2.6/site-packages|requires Lmod as modules tool"
    # '|| true' is needed to avoid that Travis stops the job on non-zero exit of grep (i.e. when there are no matches)
    - PRINTED_MSG=$(egrep -v "${IGNORE_PATTERNS}" test_framework_suite.log | grep '\.\n*[A-Za-z]' || true)
    - test "x$PRINTED_MSG" = "x" || (echo "Found printed messages in output of test suite\n${PRINTED_MSG}" && exit 1)
    # check bootstrap script version
    # version and SHA256 checksum are hardcoded below to avoid forgetting to update the version in the script along with contents
    - EB_BOOTSTRAP_VERSION=$(grep '^EB_BOOTSTRAP_VERSION' $TRAVIS_BUILD_DIR/easybuild/scripts/bootstrap_eb.py | sed 's/[^0-9.]//g')
    - EB_BOOTSTRAP_SHA256SUM=$(sha256sum $TRAVIS_BUILD_DIR/easybuild/scripts/bootstrap_eb.py | cut -f1 -d' ')
    - EB_BOOTSTRAP_FOUND="$EB_BOOTSTRAP_VERSION $EB_BOOTSTRAP_SHA256SUM"
    - EB_BOOTSTRAP_EXPECTED="20190922.01 7927513e7448d886decfb1bb5daf840e85dc7367f57cc75e51b68f21fe109d53"
    - test "$EB_BOOTSTRAP_FOUND" = "$EB_BOOTSTRAP_EXPECTED" || (echo "Version check on bootstrap script failed $EB_BOOTSTRAP_FOUND" && exit 1)
    # test bootstrap script (skip when testing with Python 3 for now, since latest EasyBuild release is not compatible with Python 3 yet)
    - if [ ! "x$TRAVIS_PYTHON_VERSION" =~ x3.[0-9] ]; then python $TRAVIS_BUILD_DIR/easybuild/scripts/bootstrap_eb.py /tmp/$TRAVIS_JOB_ID/eb_bootstrap; fi
    # unset $PYTHONPATH to avoid mixing two EasyBuild 'installations' when testing bootstrapped EasyBuild module
    - unset PYTHONPATH
    # simply sanity check on bootstrapped EasyBuild module (skip when testing with Python 3, for now)
    - if [ ! "x$TRAVIS_PYTHON_VERSION" =~ x3.[0-9] ]; then module use /tmp/$TRAVIS_JOB_ID/eb_bootstrap/modules/all; fi
    - if [ ! "x$TRAVIS_PYTHON_VERSION" =~ x3.[0-9] ]; then module load EasyBuild; eb --version; fi
